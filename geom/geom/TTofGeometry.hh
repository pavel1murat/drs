// -*- Mode: C++  -*-
//------------------------------------------------------------------------------
//  revision history:
//  -----------------
// *0001 Jan 26 1998 G.Velev: created this file on the base of the fortran
//                            include define_cmp_geometry.hh 
//                             
//------------------------------------------------------------------------------
#ifndef TTofGeometry_hh
#define TTofGeometry_hh

#include  "TPetGeometry.hh"
// #include  "TCmpConstants.hh"
                                             // number of walls 
                                             // (0 - north, 1 -up, 2 -south, 
                                             //3-down, increase in  phi)
const    int   CMP_NUMBER_OF_SIDES            = 4;       
                                             // parts per walls

const    int   CMP_NUMBER_OF_PARTS[CMP_NUMBER_OF_SIDES] = { 2, 6, 2, 3 };

//-----------------------------------------------------------------------------
// number of CSP counters (plus x2 - west/east) for each chamber
//-----------------------------------------------------------------------------
const    int   CSP_N_COUNTERS[CMP_NUMBER_OF_SIDES][6] = 
{ 
   5, 27, 0, 0,  0,  0,
   0,  9, 9, 8, 11,  3,
  27,  5, 0, 0,  0,  0,
   2, 30, 2, 0,  0,  0
};

//-----------------------------------------------------------------------------
// number of CSP counters (plus x2 - west/east) for each chamber
//-----------------------------------------------------------------------------
const    int   CSP_N_COUNTERS_PER_SIDE = 138;

const    int   CSP_FIRST_COUNTER[CMP_NUMBER_OF_SIDES][6] = 
{ 
   0,   5,   0,   0,  0,   0,
   0,  32,  41,  50, 59,  70,
  78,  73,   0,   0,  0,   0,
   2, 105, 135,   0,  0,   0
};

//-----------------------------------------------------------------------------
// type (large=0/small=1/none=-1) of the scintillation counter for this chamber
//-----------------------------------------------------------------------------
const    int   CSP_COUNTER_TYPE[CMP_NUMBER_OF_SIDES][6] = 
{ 
   1, 0, -1, -1, -1, -1,
  -1, 0,  0,  0,  0,  0,
   0, 1, -1, -1, -1, -1,
   1, 0,  1, -1, -1, -1
};

//-----------------------------------------------------------------------------
// offset of the 1st counter in local X and step
// numbering order on the south wall is opposite to that for other 3 walls
//-----------------------------------------------------------------------------
const  double   CSP_COUNTER_OFFSET[CMP_NUMBER_OF_SIDES][6][2] = 
{ 
   57.15,-1., 426.72,-1.,   0.  , 0 ,   0.  , 0,      0,  0 ,  0.  , 0.,
    0   , 0 , 137.16,-1., 137.16,-1., 136.16,-1, 167.64, -1., 45.72,-1.,
  -426.72,1 , -57.15, 1.,   0.  ,-1 ,  -1.  ,-1,  -1.  , -1., -1.  ,-1.,
   22.82,-1., 457.20,-1 ,  22.82,-1 ,  -1.  ,-1,  -1.  , -1., -1.  ,-1.
};
//-----------------------------------------------------------------------------
// local Y of the CSP counters (west, east) wrt the chamber volume
//-----------------------------------------------------------------------------
const  double   CSP_COUNTER_Y[CMP_NUMBER_OF_SIDES][6][2] = 
{ 
  6.68,6.68, 6.68,9.29, 0.  ,0.  , 0.  , 0.  , 0.  ,0.   , 0.  ,0.  ,
  -1.  ,-1., 6.68,9.29, 6.68,9.29, 6.68, 9.29, 6.68, 9.29, 6.68,9.29,
  6.68,9.29, 6.68,6.68, 0.  ,0.  , 0.  , 0.  , 0.  ,0.   , 0.  ,0.  ,
  6.68,6.68, 6.68,9.29, 6.68,6.68, 0.  , 0.  , 0.  ,0.   , 0.  ,0.  
};
                                              // Layers  per wall

int    const   CMP_NUMBER_OF_LAYERS_MAX       = 5;

int    const   CMP_NUMBER_OF_CHAMBERS         = 2; 

int    const   CMP_NUMBER_OF_SCINTILLATORS    = 2; 
 
                                              // Scintilltors per wall 

//int    const   CMP_NUMBER_OF_LAYERS            = 1;

                                               // Aluminium dimensions (cm)

double   const   TOF_MODULE_DIMX           = {   2. };
double   const   TOF_MODULE_DIMY           = {   2. };
double   const   TOF_MODULE_DIMZ           = {   1. };

                                                // Gas dimensions (cm)

double   const   CMP_X_DIM_GAS[2]               = {   1.016,   7.366  };
double   const   CMP_Y_DIM_GAS[2]               = {   7.366,   1.0167 };
double   const   CMP_Z_DIM_GAS[2]               = { 320.04 , 320.04   };

                                                // Scintillator dimensions (cm)
                                                // 15.24 or 30.48 is from cmp 
                                                // stuff, 22.86 is for the 
                                                // small part

double   const   CSP_DIMENSIONS[2][3]     = 
{   
  15.24, 1.25,  160.02,
  11.43, 1.25,  160.02
};  


double   const   XDIM_PART[CMP_NUMBER_OF_SIDES][6]    =
{      
    57.15, 426.72,   0.  ,   0.  ,   0.  ,  0.  ,     // north wall
    41.91, 137.16, 148.59, 137.16, 179.07, 49.53,     // or 5, 9, 19, 16, 23, 6   
   434.34,  57.15,   0.  ,   0.  ,   0.  ,  0.  ,
    22.86, 457.2,   22.86,   0.  ,   0.  ,  0.
};

double   const   YDIM_PART[CMP_NUMBER_OF_SIDES][6]    =
{
    7.93,   10.54,   0.  ,   0.  ,  0.  ,  0.  ,     // North wall  
    5.08,   10.54,  10.54,  10.54, 10.54, 10.54,
   10.54,    7.93,   0.  ,   0.  ,  0.  ,  0.  , 
    7.93,   10.54,   7.93,   0.  ,  0.  ,  0. 
};

double   const   ZDIM_PART[CMP_NUMBER_OF_SIDES][6]    =
{
   320.4, 320.4,   0. ,   0. ,   0. ,   0. ,
   320.4, 320.4, 320.4, 320.4, 320.4, 320.4,
   320.4, 320.4,   0. ,   0. ,   0. ,   0. ,   
   320.4, 320.4, 320.4, 320.4,   0. ,   0.         
};


double   const   XPOS_PART[CMP_NUMBER_OF_SIDES][6]    =    // check them
 {      
    465.7725, -30.615 ,    0.  ,  0. ,    0.  ,    0.  ,       // Y base 0
    514.28  ,  430.0   ,  228.4 ,  0.0, -267.68, -512.54,       // X base is 0.0.
     36.1995, -465.7725,    0.  ,  0. ,    0.  ,    0.  ,       // Y base 0
   -474.98  ,    0.0   ,  474.98,  0. ,    0.  ,    0.          // X base is 0.0.
};

double   const   YPOS_PART[CMP_NUMBER_OF_SIDES][6]    =        // check them
{
     27.93,  30.54,   0.  ,   0.  ,   0. ,  0.  ,    // X base is 547.084,
    -28.92,  59.22, -21.9 , 101.14, -21.9, -8.78,    // Y base 520.53 
     30.54,  27.93,   0.  ,   0.  ,   0. ,  0.  ,    // X base is -547.084,
     52.63,  32.9 ,  52.63,   0.0 ,   0.0,  0.0      // Y base 520.53
};

double   const   ZPOS_PART[CMP_NUMBER_OF_SIDES][6]    =
{
   0., 0., 0., 0., 0., 0.,
   0., 0., 0., 0., 0., 0.,
   0., 0., 0., 0., 0., 0.,
   0., 0., 0., 0., 0., 0.
};

int   const   CMP_NUMBER_OF_LAYERS[CMP_NUMBER_OF_SIDES][6]    =
{
   5, 5, 0, 0, 0, 0,
   5, 5, 5, 5, 5, 5,
   5, 5, 0, 0, 0, 0,
   5, 5, 5, 0, 0, 0
};    


double const CMP_LAYER_X_DIMENSION[CMP_NUMBER_OF_SIDES][6][5] = 
{
   57.15,   57.15,  57.15,  57.15,  57.15,    // 7 chambers +  (3+1)  big+small
   426.72, 426.72, 426.72, 426.72, 426.72,    // 55 chambers + 28 scintillators
   0.,   0.,   0.,   0.,   0.,
   0.,   0.,   0.,   0.,   0.,
   0.,   0.,   0.,   0.,   0.,
   0.,   0.,   0.,   0.,   0.,
  
   41.91, 41.91, 41.91, 41.91,  0.,                // 5 chambers
   137.16,137.16,137.16,137.16,137.16,        // 9 chambers + 9 scintillators
   148.59, 148.59, 148.59, 148.59, 148.59,    // 19 chambers + 9 scintillators
   137.16, 137.16, 137.16, 137.16, 137.16,    // 16 chambers + 9 scintillators
   179.07, 179.07, 179.07, 179.07, 179.07,    // 23 chambers  + 11 scintillators 
   49.53, 49.53, 49.53, 49.53, 49.53,         // 5 chambers  + 3 scintillators  

 434.34, 434.34, 434.34, 434.34, 434.34,     // 55 chambers + (25+3) big + small
  57.15,  57.15,  57.15,  57.15,  57.15,     // 7 chambers +  5 small  scintill.
   0.,   0.,   0.,   0.,   0.,
   0.,   0.,   0.,   0.,   0.,
   0.,   0.,   0.,   0.,   0.,
   0.,   0.,   0.,   0.,   0.,

   22.86, 22.86, 22.86, 22.86, 22.86,              // 2 chamber + 2 scintillators
   457.20, 457.20, 457.20, 457.20, 457.2,          // 59 chambers + 30 scintill.
   22.86, 22.86, 22.86, 22.86, 22.86,              // 2 chamber + 2 scintillators
   0.,   0.,   0.,   0.,   0.,
   0.,   0.,   0.,   0.,   0.,
   0.,   0.,   0.,   0.,   0.
};


double const CMP_LAYER_Y_DIMENSION[CMP_NUMBER_OF_SIDES][6][5] = 
{
   1.27, 1.27, 1.27, 1.27, 1.25,
   1.27, 1.27, 1.27, 1.27, 3.86,
   0.,   0.,   0.,   0.,   0.,
   0.,   0.,   0.,   0.,   0.,
   0.,   0.,   0.,   0.,   0.,
   0.,   0.,   0.,   0.,   0.,

   1.27, 1.27, 1.27, 1.27, 0.00,
   1.27, 1.27, 1.27, 1.27, 3.86,
   1.27, 1.27, 1.27, 1.27, 3.86,
   1.27, 1.27, 1.27, 1.27, 3.86,
   1.27, 1.27, 1.27, 1.27, 3.86,
   1.27, 1.27, 1.27, 1.27, 3.86,

   1.27, 1.27, 1.27, 1.27, 3.86,
   1.27, 1.27, 1.27, 1.27, 1.25,
   0.,   0.,   0.,   0.,   0.,
   0.,   0.,   0.,   0.,   0.,
   0.,   0.,   0.,   0.,   0.,
   0.,   0.,   0.,   0.,   0.,

   1.27, 1.27, 1.27, 1.27, 1.25,
   1.27, 1.27, 1.27, 1.27, 3.86,
   1.27, 1.27, 1.27, 1.27, 1.25,
   0.,   0.,   0.,   0.,   0.,
   0.,   0.,   0.,   0.,   0.,
   0.,   0.,   0.,   0.,   0.
};

double const CMP_LAYER_Z_DIMENSION[CMP_NUMBER_OF_SIDES][6][5] = 
{
 320.04, 320.04, 320.04, 320.04, 320.04, 
 320.04, 320.04, 320.04, 320.04, 320.04, 
   0.,   0.,   0.,   0.,   0.,
   0.,   0.,   0.,   0.,   0.,
   0.,   0.,   0.,   0.,   0.,
   0.,   0.,   0.,   0.,   0.,

 320.04, 320.04, 320.04, 320.04, 320.04, 
 320.04, 320.04, 320.04, 320.04, 320.04, 
 320.04, 320.04, 320.04, 320.04, 320.04, 
 320.04, 320.04, 320.04, 320.04, 320.04, 
 320.04, 320.04, 320.04, 320.04, 320.04, 
 320.04, 320.04, 320.04, 320.04, 320.04, 

 320.04, 320.04, 320.04, 320.04, 320.04, 
 320.04, 320.04, 320.04, 320.04, 320.04,
   0.,   0.,   0.,   0.,   0.,
   0.,   0.,   0.,   0.,   0.,
   0.,   0.,   0.,   0.,   0.,
   0.,   0.,   0.,   0.,   0.,

 320.04, 320.04, 320.04, 320.04, 320.04, 
 320.04, 320.04, 320.04, 320.04, 320.04, 
 320.04, 320.04, 320.04, 320.04, 320.04, 
   0.,   0.,   0.,   0.,   0.,
   0.,   0.,   0.,   0.,   0.,
   0.,   0.,   0.,   0.,   0.
};
  
int const CMP_NUMBER_OF_CHAM_SCIN[CMP_NUMBER_OF_SIDES][6][6] = 
{ 
   7,  7,  7,  7,  3,  1,     // one small, last one  
   55, 55, 55, 55, 28, 0,
   0,  0,  0,  0,  0,  0,
   0,  0,  0,  0,  0,  0, 
   0,  0,  0,  0,  0,  0,
   0,  0,  0,  0,  0,  0,

   5,  5,  5,  5,  0,  0,
   9,  9,  9,  9,  9,  0,
   19, 19, 19, 19, 9,  0,
   16, 16, 16, 16, 9,  0, 
   23, 23, 23, 23, 11, 0,
    6,  6,  6,  6, 3,  0,
    
   56, 56, 56, 56, 26, 3,           // three small scintillators, last one  
   7,  7,  7,  7,  0,  5,           // all scintillators are small 
   0,  0,  0,  0,  0,  0,
   0,  0,  0,  0,  0,  0, 
   0,  0,  0,  0,  0,  0,
   0,  0,  0,  0,  0,  0,

   2,  2,  2,  2,  0,  2,       // two small 
   59, 59, 59, 59, 30, 0,
   2,  2,  2,  2,  0,  2,       // two small 
   0,  0,  0,  0,  0,  0, 
   0,  0,  0,  0,  0,  0,
   0,  0,  0,  0,  0,  0
};

const double CMP_CHAMBER_STEP            = 2.* 7.62;
const double CMP_SCINTILLATOR_STEP       = 2.*15.24;
const double CMP_SCINTILLATOR_SMALL_STEP = 2.*11.43;

//-----------------------------------------------------------------------------
// type (large=0/small=1/none=-1) of the scintillation counter for this chamber
//-----------------------------------------------------------------------------
const    int   CMP_FIRST_STACK[CMP_NUMBER_OF_SIDES][6] = 
{ 
   0,  7, -1, -1, -1, -1,
   0,  5, 14, 32, 48, 71,
   0, 56, -1, -1, -1, -1,
   0,  3, 62, -1, -1, -1
};

double const CMP_CENTER_POSITION_OF_LAYER [CMP_NUMBER_OF_SIDES][6][5] =
{
   -6.66, -4.12, -1.58,  0.96, 6.68,       // distance between the last 
   -9.27, -6.73, -4.19, -1.65, 6.68,       // chamber layer and sciltilla-
   0.,  0.,  0.,  0.,  0.,                 // tors 3.2 cm, between scitil-
   0.,  0.,  0.,  0.,  0.,                 // lators 2.72 cm
   0.,  0.,  0.,  0.,  0.,                 // It is for all sides 
   0.,  0.,  0.,  0.,  0.,  
 
   -3.81, -1.27,  1.27,  3.81, 0.  , 
   -9.27, -6.73, -4.19, -1.65, 6.68,        // 4.07, 9.29,
   -9.27, -6.73, -4.19, -1.65, 6.68,        // 4.07, 9.29,
   -9.27, -6.73, -4.19, -1.65, 6.68,        // 4.07, 9.29,
   -9.27, -6.73, -4.19, -1.65, 6.68,        // 4.07, 9.29,
   -9.27, -6.73, -4.19, -1.65, 6.68,        // 4.07, 9.29,

   -9.27, -6.73, -4.19, -1.65, 6.68,          //-9.29, 
   -6.66, -4.12, -1.58,  0.96, 6.68, 
   0.,  0.,  0.,  0.,  0.,                 
   0.,  0.,  0.,  0.,  0.,                 
   0.,  0.,  0.,  0.,  0.,                 
   0.,  0.,  0.,  0.,  0.,     

   -6.66, -4.12, -1.58, 0.96,  6.68,	     // 6.68, 
   -9.27, -6.73, -4.19,-1.65,  6.68,         // -4.07, -9.29,        
   -6.66, -4.12, -1.58, 0.96,  6.68,	     // 6.68,     
    0.,    0.,    0.,   0.,    0.,                 
    0.,    0.,    0.,   0.,    0.,                 
    0.,    0.,    0.,   0.,    0.
};

double const WIRE_BEGIN_POSITION_IN_LAYER [CMP_NUMBER_OF_SIDES][6][6] =

{
   15.24, 7.62, 15.24, 7.62, 15.24, 102.87,  
   15.24, 7.62, 15.24, 7.62, 15.24,   0.,
   0.,  0.,  0.,  0.,  0.,  0.,
   0.,  0.,  0.,  0.,  0.,  0., 
   0.,  0.,  0.,  0.,  0.,  0.,
   0.,  0.,  0.,  0.,  0.,  0.,

   15.24,  7.62, 15.24,  7.62,  0.,    0., 
   30.48, 22.86, 30.48, 22.86, 15.24,  0.,
   15.24,  7.62, 15.24,  7.62, 15.24,  0.,
   22.86, 15.24, 22.86, 15.24, 15.24,  0.,
   15.24,  7.62, 15.24,  7.62, 22.86,  0.,  
   15.24,  7.62, 15.24,  7.62, 22.86,  0.,  
 
   15.24, 22.86, 15.24, 22.86, 22.86, 811.53,          // 803.91,  
    7.62, 15.24,  7.62, 15.24,  0.,    11.43,
   0.,  0.,  0.,  0.,  0.,  0.,
   0.,  0.,  0.,  0.,  0.,  0., 
   0.,  0.,  0.,  0.,  0.,  0.,
   0.,  0.,  0.,  0.,  0.,  0.,   

   22.86, 15.24, 22.86, 15.24,  0.  , 11.43,
   22.86, 15.24, 22.86, 15.24, 15.24,  0.,        
   22.86, 15.24, 22.86, 15.24,  0.  , 11.43,
   0.,  0.,  0.,  0.,  0.,  0., 
   0.,  0.,  0.,  0.,  0.,  0.,
   0.,  0.,  0.,  0.,  0.,  0.
};    

double const CMP_SCINTILLATOR_OFFSET [CMP_NUMBER_OF_SIDES][6] =
{
   0.  ,  2.61, 0.  , 0.  , 0.  , 0.  ,
   0.  ,  2.61, 2.61, 2.61, 2.61, 2.61,
  -2.61,  0.,   0.  , 0.  , 0.  , 0.  ,
   0.  , -2.61, 0.  , 0.  , 0.  , 0.
};


int const NUMBER_OF_PASSIVE_MATERIAL_PER_SIDE[CMP_NUMBER_OF_SIDES] =
{
   1, 5, 1, 3
};

double const XDIM_OF_PASSIVE_MATERIAL[CMP_NUMBER_OF_SIDES][5] =
{
   439.55, 0. ,0. ,0. ,0. ,         // 443.36, 0., 0., 0., 0.,
   125.6, 144.4, 158.8, 138., 158.8, 
   443.36, 0., 0., 0., 0.,
   77.3, 380., 77.3, 0., 0.        // 77.6, 380., 77.6, 0., 0.
};
   
double const YDIM_OF_PASSIVE_MATERIAL[CMP_NUMBER_OF_SIDES][5] =
{
   30.4, 0., 0., 0., 0.,
   16., 10.24, 43.6, 32.8, 43.6, 
   30.4, 0., 0., 0., 0.,
   31.34, 47.6, 31.34, 0., 0.        // 27.84 -> 31.84
};

double const ZDIM_OF_PASSIVE_MATERIAL[CMP_NUMBER_OF_SIDES][5] =
{
 320.04, 320.04, 320.04, 320.04, 320.04, 
 320.04, 320.04, 320.04, 320.04, 320.04, 
 320.04, 320.04, 320.04, 320.04, 320.04, 
 320.04, 320.04, 320.04, 320.04, 320.04, 
};

double const XPOS_OF_PASSIVE_MATERIAL[CMP_NUMBER_OF_SIDES][5] =
{
   -32.34,   0.,   0. , 0.,    0. ,                 //36.16
   560.48, 542., 218.8, 0., -218.8, 
    36.16,   0.,   0. , 0.,    0. ,
  -457.3 ,   0., 457.3, 0.,    0.
};

double const YPOS_OF_PASSIVE_MATERIAL[CMP_NUMBER_OF_SIDES][5] =
{
  -13.6 ,   0.  ,   0.  ,  0.  ,   0.  ,
    5.76,  33.92, -82.64, 51.36, -82.64, 
  -13.6 ,   0.  ,   0.  ,  0.  ,   0.  ,
  -15.92, -27.36, -15.92,  0.  ,   0.
};

double const ZPOS_OF_PASSIVE_MATERIAL[CMP_NUMBER_OF_SIDES][5] =
{
   0., 0., 0., 0., 0., 
   0., 0., 0., 0., 0.,    
   0., 0., 0., 0., 0., 
   0., 0., 0., 0., 0.
};


#endif
